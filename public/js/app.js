"use strict";function Auth(e,t){e.loginUrl=t+"/login",e.signupUrl=t+"/register",e.tokenPrefix=""}function RegisterController(e,t){function r(){e.signup(o.user).then(function(){t.go("login")})}var o=this;o.user={},o.submit=r}function LoginController(e,t){function r(){e.login(o.credentials).then(function(){t.go("usersIndex")})}var o=this;o.credentials={},o.submit=r}function dragDrop(){var e=new FileReader;return{restrict:"E",replace:!0,templateUrl:"templates/dragDrop.html",scope:{base64:"="},link:function(t,r){t.base64=null,t.active=!1,e.onload=function(){t.base64=e.result,t.$apply()},r.on("dragover",function(){t.active=!0,t.$apply()}).on("dragover",function(e){e.preventDefault()}).on("dragleave",function(){t.active=!1,t.$apply()}).on("drop",function(t){t.preventDefault();var r=(t.target.files||t.dataTransfer.files)[0];e.readAsDataURL(r)})}}}function MainController(e,t,r){function o(){e.logout().then(function(){t.go("usersIndex")})}function s(r,o){n.message=null,!e.isAuthenticated()&&l.includes(o.name)&&(r.preventDefault(),t.go("login"),n.message="You must be logged in to go there!")}var n=this;n.isLoggedIn=e.isAuthenticated,n.message=null;var l=["usersEdit"];r.$on("$stateChangeStart",s),n.logout=o}function Post(e,t){return new e(t+"/posts/:id",{id:"@id"},{update:{method:"PUT"}})}function PostsIndexController(e){var t=this;t.all=e.query()}function PostsNewController(e,t){function r(){e.save(o.post,function(){t.go("postsIndex")})}var o=this;o.post={},o.create=r}function Router(e,t){e.state("usersIndex",{url:"/users",templateUrl:"/templates/usersIndex.html",controller:"UsersIndexController as usersIndex"}).state("register",{url:"/register",templateUrl:"/templates/register.html",controller:"RegisterController as register"}).state("login",{url:"/login",templateUrl:"/templates/login.html",controller:"LoginController as login"}).state("usersShow",{url:"/users/:id",templateUrl:"/templates/usersShow.html",controller:"UsersShowController as usersShow"}).state("usersEdit",{url:"/users/:id/edit",templateUrl:"/templates/usersEdit.html",controller:"UsersEditController as usersEdit"}).state("postsIndex",{url:"/posts",templateUrl:"/templates/postsIndex.html",controller:"PostsIndexController as postsIndex"}).state("postsNew",{url:"/posts/new",templateUrl:"/templates/postsNew.html",controller:"PostsNewController as postsNew"}).state("postsShow",{url:"/posts/new",templateUrl:"/templates/postsShow.html",controller:"PostsShowController as postsShow"}),t.otherwise("/users")}function User(e,t){return new e(t+"/users/:id",{id:"@id"},{update:{method:"PUT"}})}function UsersIndexController(e){var t=this;t.all=e.query()}function UsersShowController(e,t,r){function o(){s.user.$remove(function(){t.go("usersIndex")})}var s=this;s.user=e.get(t.params),s.delete=o,s.isLoggedIn=r.isAuthenticated}function UsersEditController(e,t){function r(){o.user.$update(function(){t.go("usersShow",t.params)})}var o=this;o.user=e.get(t.params),this.update=r}angular.module("finalProject",["ngResource","ui.router","satellizer"]).constant("API_URL","http://localhost:3000/api").config(Auth),Auth.$inject=["$authProvider","API_URL"],angular.module("finalProject").controller("RegisterController",RegisterController).controller("LoginController",LoginController),RegisterController.$inject=["$auth","$state"],LoginController.$inject=["$auth","$state"],angular.module("finalProject").directive("dragDrop",dragDrop),angular.module("finalProject").controller("MainController",MainController),MainController.$inject=["$auth","$state","$rootScope"],angular.module("finalProject").factory("Post",Post),Post.$inject=["$resource","API_URL"],angular.module("finalProject").controller("PostsIndexController",PostsIndexController).controller("PostsNewController",PostsNewController),PostsIndexController.$inject=["Post"],PostsNewController.$inject=["Post","$state"],angular.module("finalProject").config(Router),Router.$inject=["$stateProvider","$urlRouterProvider"],angular.module("finalProject").factory("User",User),User.$inject=["$resource","API_URL"],angular.module("finalProject").controller("UsersIndexController",UsersIndexController).controller("UsersShowController",UsersShowController).controller("UsersEditController",UsersEditController),UsersIndexController.$inject=["User"],UsersShowController.$inject=["User","$state","$auth"],UsersEditController.$inject=["User","$state"];
//# sourceMappingURL=app.js.map
